name: Build Rules

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Set up Make
      run: sudo apt-get install -y make

    - name: Check if some folders have changes
      id: check_changes
      run: |
        CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
        FILES_TO_CHECK="rules/ security/ override/"
        for FILE in $FILES_TO_CHECK; do
          if echo "$CHANGED_FILES" | grep -q "$FILE"; then
            echo "RULES_CHANGED=false" >> $GITHUB_ENV
            exit 0
          fi
        done
        echo "RULES_CHANGED=true" >> $GITHUB_ENV

    - name: Get the latest tag
      run: echo "LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

    - name: Determine ruleset version
      run: |
        RULESET_VERSION=$(./version.sh $RULES_CHANGED $LATEST_TAG)
        echo "RULESET_VERSION=$RULESET_VERSION" >> $GITHUB_ENV

    - name: Run Makefile
      run: make RULESET_VERSION=$RULESET_VERSION

    - name: Upload rulesets as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rulesets
        path: rulesets/

    - name: Create new tag
      if: env.LATEST_TAG != env.RULESET_VERSION
      run: |
        git tag $RULESET_VERSION
        git push origin $RULESET_VERSION
  
    - name: Create GitHub release
      id: create_release
      if: env.LATEST_TAG != env.RULESET_VERSION
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.RULESET_VERSION }}
        release_name: Rules ${{ env.RULESET_VERSION }}
        draft: false
        prerelease: false
  
    - name: Upload rulesets to release
      if: env.LATEST_TAG != env.RULESET_VERSION
      run: |
        for file in rulesets/*; do
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: $(file --mime-type -b $file)" \
            --data-binary @$file \
            ${{ steps.create_release.outputs.upload_url }}?name=$(basename $file)
        done

    - name: Clean up
      run: make clean